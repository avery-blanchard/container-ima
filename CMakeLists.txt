CMAKE_MINIMUM_REQUIRED(VERSION 3.5)

ENABLE_LANGUAGE(CXX)
SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS OFF)

INCLUDE(GNUInstallDirs)
PROJECT(test)

IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Release)
ENDIF(NOT CMAKE_BUILD_TYPE)

SET(CMAKE_CXX_FLAGS_RELEASE  "-O3 -flto")

SET(CMAKE_CXX_FLAGS "-Wall -Wextra -Wno-unused-parameter -g3 ${CMAKE_CXX_FLAGS} -DENABLE_LLVM_SHARED=1")

FIND_PATH(LIBBCC_INCLUDE_DIR NAMES bcc/BPF.h)
FIND_LIBRARY(LIBBCC_LIB "bcc")
IF (LIBBCC_LIB)
  IF (LIBBCC_INCLUDE_DIR)
    INCLUDE_DIRECTORIES("${LIBBCC_INCLUDE_DIR}")
  ELSE (LIBBCC_INCLUDE_DIR)
    MESSAGE(SEND_ERROR "libbcc header files not found")
  ENDIF (LIBBCC_INCLUDE_DIR)
ELSE (LIBBCC_LIB)
  MESSAGE(SEND_ERROR "libbcc not found")
ENDIF (LIBBCC_LIB)

SET(SOURCE_FILES
    ./test.cpp
    ./container_ima.h)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR} "${PROJECT_BINARY_DIR}")

ADD_EXECUTABLE(test ${SOURCE_FILES})
TARGET_LINK_LIBRARIES(test ${LIBBCC_LIB})